{"version":3,"sources":["components/Navigation/brain.svg","components/Home/imageLinkForm.jsx","components/Home/faceRecognition.jsx","components/Home/home.jsx","components/Register/register.jsx","components/SignIn/signin.jsx","components/Navigation/homeNavigation.jsx","components/Navigation/outsideNaigation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImageLinkForm","onInputChange","onButtonSubmit","className","id","type","placeholder","onChange","onClick","FaceRecognition","imgUrl","boxes","src","alt","map","box","key","left","style","top","right","bottom","app","Clarifai","App","apiKey","Home","calculateFaceLocation","data","clarifaiBoxes","outputs","regions","r","region_info","bounding_box","document","getElementById","width","height","b","left_col","top_row","right_col","bottom_row","target","setState","input","value","onSubmit","models","predict","FACE_DETECT_MODEL","state","then","response","this","Component","Register","maxWidth","borderRadius","autoFocus","color","to","Signin","HomeNavigation","brain","OutsideNavigation","particlesOptions","particles","number","density","enable","value_area","isSignedIn","params","path","component","from","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5b9f5442.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.5090b11d.svg\";","import React from \"react\";\r\nimport \"./imageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div className=\"form-inline d-flex justify-content-center\">\r\n      <div className=\"form-group mb-2\">\r\n        <input\r\n          id=\"input\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Image URL\"\r\n          onChange={onInputChange}\r\n        />\r\n      </div>\r\n      <button\r\n        id=\"detectButton\"\r\n        onClick={onButtonSubmit}\r\n        className=\"btn btn-outline-primary mb-2\"\r\n      >\r\n        Detect\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from \"react\";\r\nimport \"./faceRecognition.css\";\r\n\r\nconst FaceRecognition = ({ imgUrl, boxes }) => {\r\n  return (\r\n    <div className=\"imageContainer\">\r\n      <img id=\"inputImage\" src={imgUrl} alt=\"\" />\r\n      {boxes.map((box) => (\r\n        <div\r\n          key={box.left}\r\n          className=\"bounding_box\"\r\n          style={{\r\n            left: box.left,\r\n            top: box.top,\r\n            right: box.right,\r\n            bottom: box.bottom,\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React, { Component } from \"react\";\r\nimport ImageLinkForm from \"./imageLinkForm\";\r\nimport FaceRecognition from \"./faceRecognition\";\r\nimport Rank from \"./rank\";\r\nimport Clarifai from \"clarifai\";\r\nimport \"./home.css\";\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: \"0af6264b3c424d85bca59eaf27d86eea\",\r\n});\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      input: \"\",\r\n      boxes: [],\r\n    };\r\n  }\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const clarifaiBoxes = data.outputs[0].data.regions.map(\r\n      (r) => r.region_info.bounding_box\r\n    );\r\n    const { width, height } = document.getElementById(\"inputImage\");\r\n\r\n    return clarifaiBoxes.map((b) => {\r\n      return {\r\n        left: width * b.left_col,\r\n        top: height * b.top_row,\r\n        right: width - width * b.right_col,\r\n        bottom: height - height * b.bottom_row,\r\n      };\r\n    });\r\n  };\r\n\r\n  onInputChange = ({ target }) => {\r\n    this.setState({ input: target.value, boxes: [] });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    app.models\r\n      .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\r\n      .then((response) => {\r\n        this.setState({ boxes: this.calculateFaceLocation(response) });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <Rank /> */}\r\n        <ImageLinkForm\r\n          onInputChange={this.onInputChange}\r\n          onButtonSubmit={this.onSubmit}\r\n        />\r\n        <FaceRecognition boxes={this.state.boxes} imgUrl={this.state.input} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div\r\n      className=\"shadow mx-auto p-3\"\r\n      style={{ maxWidth: \"500px\", borderRadius: \"5%\" }}\r\n    >\r\n      <h1 className=\"h3 mb-3\">Register</h1>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control w-75 mb-2 mx-auto\"\r\n        placeholder=\"Name\"\r\n        autoFocus\r\n      />\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control w-75 mb-2 mx-auto\"\r\n        placeholder=\"Email address\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        className=\"form-control w-75 mb-2 mx-auto\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <Link style={{ color: \"white\" }} to=\"/home\">\r\n        <button className=\"btn btn-lg btn-primary m-3\">Register</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./signin.css\";\r\n\r\nconst Signin = () => {\r\n  return (\r\n    <div className=\"form shadow mx-auto p-3\">\r\n      <h1 className=\"h3 mb-3\">Sign In</h1>\r\n      <input\r\n        type=\"email\"\r\n        className=\"form-control w-75 mb-2 mx-auto\"\r\n        placeholder=\"Email address\"\r\n        autoFocus\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        className=\"form-control w-75 mb-2 mx-auto\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <p>\r\n        Don't have an account?&nbsp;\r\n        <Link className=\"text-dark underline\" to=\"/register\">\r\n          Sign up\r\n        </Link>\r\n      </p>\r\n      <p>or</p>\r\n      <p>\r\n        <Link className=\"text-dark underline\" to=\"/home\">\r\n          Use without an account\r\n        </Link>\r\n      </p>\r\n      <Link style={{ color: \"white\" }} to=\"/home\">\r\n        <button id=\"sign-in-button\" className=\"btn btn-lg btn-primary m-3\">\r\n          Sign in\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport brain from \"./brain.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\n\r\nconst HomeNavigation = () => {\r\n  return (\r\n    <nav className=\"d-flex justify-content-between\">\r\n      <img src={brain} alt=\"logo\" />\r\n      <div>\r\n        <Link className=\"link underline\" to=\"/signin\">\r\n          Sign Out\r\n        </Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default HomeNavigation;\r\n","import React from \"react\";\r\nimport brain from \"./brain.svg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\n\r\nconst OutsideNavigation = () => {\r\n  return (\r\n    <nav className=\"d-flex justify-content-between\">\r\n      <img src={brain} alt=\"logo\" />\r\n      <div className=\"d-flex\">\r\n        <div>\r\n          <Link className=\"link underline\" to=\"/signin\">\r\n            Sign In\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link className=\"link underline\" to=\"/register\">\r\n            Register\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default OutsideNavigation;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\nimport Home from \"./components/Home/home\";\nimport Register from \"./components/Register/register\";\nimport Signin from \"./components/SignIn/signin\";\nimport HomeNavigation from \"./components/Navigation/homeNavigation\";\nimport OutsideNavigation from \"./components/Navigation/outsideNaigation\";\nimport \"./App.css\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isSignedIn: false,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Switch>\n          <Route\n            path={[\"/signin\", \"/register\"]}\n            component={OutsideNavigation}\n          />\n          <Route path=\"/\" component={HomeNavigation} />\n        </Switch>\n        <Switch>\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/home\" component={Home} />\n          <Redirect from=\"/\" to=\"home\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}